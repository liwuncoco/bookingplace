// 讀取 變數 檔案 ；@use 區域性；一次性；規則 檔案要另給名稱；基於檔案的安全性；要放置在所有語法的最上層
@use '_01variable/variable' as Var;
@use '_02mixin/01media' as Media;
@use '_02mixin/02images' as Img;
// @use '_02mixin/03Rounded' as Ro;
// @use '_02mixin/04Jmixin' as JM;
// 滿版設計 section id="ceshizhong"：設定 寬度 100 高 100 背景顏色

#bookingplace {
    width: Var.$Num10 * 10 * Var.$Per;
    height: Var.$Num10 * 10 * Var.$Per;
    background-color: burlywood;
}

// 子選擇器 (指定階層 > ：同層之中不能有相同的標籤，若有相同需設定 id or class)：子孫選擇器(跨標籤讀取 利用「空格」；不論哪一層物件，需設定 id or class)
// 巢狀寫法
// menu( 背景圖片取代文字呈現) 與 LOGO (水平垂直置中) 要同一列；聯絡資訊要各別一列 (文字寬度為 90%； 文字靠右對齊，文字顏色 咖啡色； 隱藏項目符號)

// #{ } 格式，會將「變數設定為字串」的內容轉譯為「選擇器」或是「屬性名稱」
@include Media.Rwd(xs) {
    $FooterHeight: Var.$Num10 * 5px;
    header {
        // 顯示方法；彈性佈局(智能對齊)；在需要排版物件的父框架設定；會將所有的子物件排成一列
        display: flex;
        // 換行，將子物件設定為 兩列；預設值會自動判斷 子物件 的寬度(均分)要設定 子物件 的寬度才會有作用
        flex-wrap: wrap;
        list-style-type: none;
        #menu {
            width: Var.$Num10 * 1.5%;
            height: 50px;
            // 文字顏色
            color: rebeccapurple;
            // // 背景圖片取代文字顯示，背景圖片的對齊功能，可以輕易達到 水平垂直置中 的排列方法
            // // 1. 設定背景圖片連結
            // // 2. 背景圖片不重複顯示
            // // 3. 背景圖片的對齊 (定位點 X Y - 水平垂直置中)
            // // 4. 位移文字(首行縮排 - 單行文字 或者 段落文字的第一行)
            // // 5. 圖片尺寸設定(預設值：自動) cover (滿版覆蓋框架尺寸) contain (留白) | 各別設定 x y 的值(例如： background-size: 50% 30%) | 單位：px %
            // background-image: url(../../images/icon/list.svg);
            // background-repeat: no-repeat;
            // background-position: center;
            // background-size: contain;
            // text-indent: -9999px;
            @include Img.Images(center, contain, icons, 'list.svg');    
            // 背景顏色
            background-color: aquamarine;
            // #{}格式，會將「變數設定為字串」的內容轉譯為「選擇器」或是「屬性名稱」 #{Var.$sm}
    
            // @include Media.Rwd(sm) {
            //     width: Var.$Num10 * 1.3%;
            //     background-color: rgb(145, 48, 255);
            // }
    
            // @include Media.Rwd(md) {
            //     width: Var.$Num10 * 1.3%;
            //     background-color: rgb(244, 32, 32);
            // }
        }
        > h1 {
            // 行高(行距)；h1 (2em 32px) h2 (1.5em 24px) h3 (1em 16px)
            width: Var.$Num10 * 8.5%;
            // height: 50px;
            text-align: center;
            // 背景顏色
            background-color: gray;
            li {
                // height: 32px;
                // 上間距 margin-top
                margin-top: calc((50px - 32px) / 2 );
                // background-color: olive;
            }
        }
        .ConnBox {
            width: Var.$Num10 * 10%;
            position: absolute;
            bottom: calc($FooterHeight + 10px);
        }
        nav {
            width: Var.$Num10 * 10%;
            height: Var.$Num10 * 10%;
            // 層疊樣式表 Z 軸 數值：值越小，層越低；值越大，層越高
            z-index: Var.$ZNum99;
            // 須配合 定位點：絕對
            position: absolute;
            background-color: #fff;
            display: none;

            // 父框架設置定位點 relative ，子物件設置定位點 absolute， 系統會將「body」的原點位置，重新給「父框架」使用

            // 區域變數
            $MenuHeaderH: Var.$Num10 * 15;

            #menuheader {
                height: calc( $MenuHeaderH * 1px );
                // position: relative;
                display: flex;
                // 定位點：停佇
                position: fixed;
                // 水平置中
                justify-content: center;
                // 垂直置中
                align-items: center;
                background-color: Var.$Blue-Grenn;

                #close {
                    // 顯示方式： inline-block (行內區塊層級)：以內容的寬度為主
                    display: inline-block;
                    // 文字尺寸取代高度
                    font-size: 1.15rem;
                    // 文字設定內間距(留白)
                    padding: 10px;
                    // 文字變化 uppercase (全部大寫) lowercase (全部小寫) capitalize (單字的第一個字母大寫)
                    text-transform: uppercase;
                    
                    // 文字變化 小型大寫字，會比原本的大寫還要再小再扁一點
                    // font-variant: small-caps;
                    
                    // 定位點：絕對
                    position: absolute;
                    top: 0;
                    right: 0;

                    // 浮動元素：靠右
                    // 若與 display: inline-block 一起用，系統將會視為display: block
                    // float: right;

                    a {
                        color: #fff;
                        // 取消文字裝飾(底線)
                        text-decoration: none;
                    }
                }
                // #close::after {
                //     content: "";
                //     display: block;
                //     clear: both;
                // }
                > h1 {
                    font-size: 2rem;
                    // position: absolute;
                    // top: 50%;
                    // left: 50%;
                    // margin-left: -25%;
                    // margin-top: -6%;
                }
            }
            #menunav {
                width: Var.$Num10 * 8%;
                // height: Var.$Num10 * 6.8%;
                // 上邊界
                margin-top: calc( ( $MenuHeaderH + 10 ) * 1px );
                
                .NH {
                    height: 70px;
                }
                h2 {
                    padding: 2.5px 0;
                    border-bottom: {
                        color: Var.$Blue-Grenn;
                        width: 4px;
                        style: double;
                    };
                }
                .Conn {
                   margin-top: 20px;  
                }
                ul {
                    display: flex;
                    flex-wrap: wrap;
                    li {
                        width: Var.$Num10 * 10%;
                        // 首行縮排
                        text-indent: 8%;
                        font-size: 1rem * 1.2;
                    }
                    .One {
                        order: 2;
                    }
                    .Two {
                        order: 3;
                    }
                    .Three {
                        order: 4;
                    }
                    .Four {
                        order: 5;
                    }
                    .Five {
                        order: 6;
                    }
                    .Six {
                        order: 1;
                    }
                }
                // .Items {
                //     display: flex;
                //     flex-wrap: wrap;
                //     li {
                //         width: Var.$Num10 * 10%;
                //     }
                // }

            }
            $MenuIconWidth: Var.$Num10 * 8.5%;
            #menuicon {
                width: $MenuIconWidth;
                height: Var.$Num10 * 6px;
 
                // 框線 border
                border-top: {
                    color: Var.$Blue-Grenn;
                    width: 2px;
                    // solid 實線；double 雙線；dashed 虛線； dotted 圓點虛線； 
                    // inset 內陰影； outset 外陰影；groove 浮凸； ridge 內凹
                    style: solid;
                };
                display: flex;
                justify-content: center;
                align-items: center;
                // 定位點：絕對值
                position: absolute;
                z-index: Var.$ZNum10; 
                // 定位點：停佇
                position: fixed;
                bottom: 0;

                margin-left: calc( ( 100% - $MenuIconWidth ) / 2 );

                background-color: #fff;
            }
        }
    }
    footer {
        height: $FooterHeight;
        // 定位點：停佇
        position: fixed;
        bottom: 0;
        font-size: 0.9rem;
    }
}

@include Media.Rwd(sm) {
    header {
        #menu {
            width: Var.$Num10 * 1.3%;
            background-color: rgb(145, 48, 255);
        }
        h1 {
            width: Var.$Num10 * 8.7%;
            background-color: rgb(198, 40, 40);
        }
    }
    main {
        background-color: green;
    }
    nav {
        // color: yellow;
    }
}

@include Media.Rwd(md) {
    header {
        #menu {
            width: Var.$Num10 * 1.3%;
            background-color: rgb(244, 32, 32);
        }
        h1 {
            background-color: rgb(222, 242, 41);
        }
        ul {
            width: Var.$Num10 * 10%;
        }
    }
    main {
        background-color: palegreen;
    }
    nav {
        // color: orange;
    }
}

@include Media.Rwd(lg) {
    // @include Media.FloatBox();
    @include Media.FlexBox();

}

